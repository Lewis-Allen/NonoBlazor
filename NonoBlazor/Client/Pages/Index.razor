@page "/"
@page "/StandardNonogram"
@using NonoBlazor.Shared
@inject HttpClient httpClient;

<div id="wrapper">
    <nav class="nonogram-filter">
        <h1>Nonograms</h1>

        <div class="sort">

            <div class="collection-sort">
                <label>Filter Size:</label>
                <select @onchange="(e => FilterSize(e.Value.ToString()))">
                    <option value="0">No Filter</option>
                    <option value="5x5">5 x 5</option>
                    <option value="10x10">10 x 10</option>
                    <option value="20x20">20 x 20</option>
                </select>
            </div>

            <div class="collection-sort">
                <label>Sort by:</label>
                <select>
                    <option value="/">Nothing here yet!</option>
                </select>
            </div>
        </div>
    </nav>

    <section class="nonograms">

        @if (DisplayedNonograms == null)
        {
            <p>Loading...</p>
        }
        else if (DisplayedNonograms.Count == 0)
        {
            <p>The are no puzzles with the selected filters.</p>
        }
        else
        {
            @foreach (var nonogram in DisplayedNonograms)
            {
                <StandardNonogramCard Nonogram="nonogram"></StandardNonogramCard>
            }
        }

    </section>
</div>

@code {

    List<StandardNonogram> FullNonogramList = new List<StandardNonogram>();

    List<StandardNonogram> DisplayedNonograms = new List<StandardNonogram>();

    protected override async Task OnInitializedAsync()
    {
        FullNonogramList = await httpClient.GetFromJsonAsync<List<StandardNonogram>>("api/StandardNonogram");
        DisplayedNonograms = FullNonogramList;
    }

    protected void FilterSize(string filter)
    {
        // No Filter
        if (filter == "0")
        {
            DisplayedNonograms = FullNonogramList;
        }
        else
        {
            string[] sizes = filter.Split("x");

            (int width, int height) = (int.Parse(sizes[0]), int.Parse(sizes[1]));

            DisplayedNonograms = FullNonogramList.Where(sn => sn.Width == width && sn.Height == height).ToList();
        }
    }
}